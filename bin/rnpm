#!/usr/bin/env node

var app = require('commander')
  , fs = require('fs')
  , npm = require('npm')
  , rnpm = require('../lib')
  , path = require('path');

app
  .version(JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'package.json'), 'utf-8')).version);

app
  .option('--prod, --production', 'Ignore `devDependencies`.')
  .option('--strict', 'Fail on inconsistent dependencies.')

app
  .command('install')
  .alias('i')
  .option('--ignore-scripts', 'Do not run scripts')
  .description('Recursively install dependencies')
  .action(function(ignoreScripts) {
    rnpm.install({
      production: app.production,
      ignoreScripts: ignoreScripts,
      strict: app.strict,
      cwd: process.cwd()
    })
  });

app
  .command('prune')
  .description('Recursive npm prune')
  .action(function() {
    rnpm.prune({ production: app.production, cwd: process.cwd() })
  });

app
  .command('shrinkwrap')
  .alias('shrink')
  .description('Recursive npm shrinkwrap')
  .action(function() {
    rnpm.custom('shrinkwrap', true, { cwd: process.cwd() })
  });

app
  .command('list')
  .alias('ls')
  .option('--depth <n>', 'Max display depth of the dependency tree', parseInt)
  .description('Recursive npm list')
  .action(function(opts) {
    rnpm.custom('list', true, {depth: opts.depth || 0, cwd: process.cwd()})
  });

app
  .command('test')
  .alias('t')
  .description('Recursive npm test')
  .action(function() {
    rnpm.test({ cwd: process.cwd() })
  });

app
  .command('run [script]')
  .description('Recursive npm run-script')
  .action(function(script) {
    rnpm.run(script, { cwd: process.cwd() })
  });

app
  .command('analyze')
  .description('Analyze dependencies and find inconsistencies')
  .action(function() {
    rnpm.analyze({ production: app.production, cwd: process.cwd() })
  });

app
  .command('update-dep <dependency> <version>')
  .description('Update a dependency version recursively')
  .action(function(dep, version) {
    rnpm.updateDep({ dependency: dep, version: version, cwd: process.cwd() });
  });

app
  .command('normalize')
  .description('Normalize dependencies recursively')
  .action(function() {
    rnpm.normalize({cwd: process.cwd()}, function() {
      process.exit(0);
    })
  });

app
  .command('execute <command...>')
  .alias('exec')
  .description('Execute an arbitrary command in every component')
  .action(function(args) {
    var cmd = args.shift()
    rnpm.execute(cmd, {cwd: process.cwd()}, args)
  });

app.on('--help', function(){
  console.log('  Examples:\n');
  console.log('    $ rnpm i --prod')
  console.log('    $ rnpm update-dep each-async 1.0.4')
  console.log('    $ rnpm exec -- ls -A')
  console.log('    $ rnpm ls --depth=1')
})

if (process.argv.length == 2) {
  return app.help()
}

// Initialize NPM as a lib
npm.load({}, function() {
  app.parse(process.argv)
})
